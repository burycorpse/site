document.addEventListener('DOMContentLoaded', () => {

    // --- Particle.js Initialization ---
    if (document.getElementById('particles-js')) {
        particlesJS('particles-js', {
          "particles": {
            "number": {
              "value": 60, // Adjust particle count
              "density": {
                "enable": true,
                "value_area": 800
              }
            },
            "color": {
              "value": "#4a4a6a" // Particle color (match ui element color)
            },
            "shape": {
              "type": "circle", // or "edge", "triangle", "polygon", "star", "image"
              "stroke": {
                "width": 0,
                "color": "#000000"
              },
              "polygon": {
                "nb_sides": 5
              }
            },
            "opacity": {
              "value": 0.3, // Make particles subtle
              "random": true,
              "anim": {
                "enable": true,
                "speed": 0.5,
                "opacity_min": 0.05,
                "sync": false
              }
            },
            "size": {
              "value": 2, // Small particles
              "random": true,
              "anim": {
                "enable": false,
                "speed": 40,
                "size_min": 0.1,
                "sync": false
              }
            },
            "line_linked": {
              "enable": true,
              "distance": 100, // Adjust distance
              "color": "#5a5a7a", // Line color - slightly lighter ui color
              "opacity": 0.2, // Subtle lines
              "width": 1
            },
            "move": {
              "enable": true,
              "speed": 1, // Slow movement
              "direction": "none",
              "random": true,
              "straight": false,
              "out_mode": "out",
              "bounce": false,
              "attract": {
                "enable": false,
                "rotateX": 600,
                "rotateY": 1200
              }
            }
          },
          "interactivity": {
            "detect_on": "canvas",
            "events": {
              "onhover": {
                 // Optional: Slight repel on hover
                "enable": true,
                "mode": "repulse"
              },
              "onclick": {
                "enable": false, // Disable click interaction
                "mode": "push"
              },
              "resize": true
            },
            "modes": {
               "repulse": {
                "distance": 50, // Hover interaction distance
                "duration": 0.4
              },
              // Other modes (grab, bubble, push, remove) if needed
            }
          },
          "retina_detect": true
        });
    }

    // --- Sticky Header ---
    const header = document.querySelector('.main-header');
    if (header) {
        window.addEventListener('scroll', () => {
            if (window.scrollY > 50) { // Add class after scrolling 50px
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
        });
    }

    // --- Smooth Scrolling (Keep from previous) ---
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
       // ... (same code) ...
    });

    // --- Intersection Observer for Scroll Animations (Keep from previous) ---
    const revealElements = document.querySelectorAll('.reveal-on-scroll');
    const observerOptions = {
        root: null,
        rootMargin: '0px',
        threshold: 0.1 // Adjust threshold if needed (0.1 means 10% visible)
    };
    const observerCallback = (entries, observer) => {
        entries.forEach((entry) => { // Removed index, using data-delay
            if (entry.isIntersecting) {
                const delay = entry.target.dataset.delay || '0'; // Get delay from data-attribute or default to 0
                entry.target.style.transitionDelay = `${delay}s`;
                entry.target.classList.add('is-visible');
                observer.unobserve(entry.target);
            }
        });
    };
    const observer = new IntersectionObserver(observerCallback, observerOptions);
    revealElements.forEach(el => { observer.observe(el); });


    // --- Optional: Hero Product Mouse Interaction (Keep from previous if desired) ---
    // const heroSection = document.querySelector('.hero-section');
    // const productDisplay = document.querySelector('.product-visual-container');
    // if (heroSection && productDisplay) {
    //    // ... (same mousemove/mouseleave logic) ...
    //    heroSection.style.perspective = '1500px'; // Adjust perspective
    // }


    console.log("Website Initialized with Particle Effects.");
}); // End DOMContentLoaded
